!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__submit-button_type_error"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.errorClass)},o=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):a(t,r)},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass),e.classList.add(t.errorClass)},a=(e,t)=>{e.disabled=!1,e.classList.remove(t.inactiveButtonClass),e.classList.remove(t.errorClass)};var c=e+"d38272e02bb4f1ab1c37.svg",s=e+"40608da7369d39bc1077.svg",l=e+"d3610e9c6dce3cb370d8.svg",i=e+"4a48bfc92ea7b08b7842.jpg",d=e+"48d18dbfdce98953a057.svg",u=e+"c44a897c441fe3d19ed8.png";function m(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t?(e.textContent=o,console.log(`Setting text to ${o}`)):e.textContent=r}const _=document.querySelector("#avatar-modal"),h=(_.querySelector(".modal__form"),_.querySelector(".modal__submit-button"),_.querySelector(".modal__close-button"),_.querySelector("#profile-avatar-input")),v=document.querySelector(".profile__avatar-button"),S=document.querySelector(".profile__avatar"),b=document.querySelector("#edit-modal"),f=document.querySelector(".profile__name"),p=document.querySelector(".profile__description"),y=document.querySelector(".profile__edit-button"),g=b.querySelector(".modal__form"),q=(b.querySelector(".modal__close-button"),b.querySelector("#profile-name-input")),k=b.querySelector("#profile-description-input"),L=document.querySelector("#add-card-modal"),C=L.querySelector(".modal__form"),E=(L.querySelector(".modal__close-button"),L.querySelector("#add-card-name-input")),U=L.querySelector("#add-card-link-input"),x=document.querySelector(".profile__add-button"),$=document.querySelector("#card-template"),A=document.querySelector(".cards__list"),D=document.querySelector("#preview-modal"),I=(D.querySelector(".modal__close-button"),D.querySelector(".modal__image")),R=D.querySelector(".modal__caption"),T=(L.querySelector(".modal__submit-button"),document.querySelector("#delete-modal")),B=T.querySelector(".modal__form"),P=T.querySelector("#cancel-button");let j,w;const N=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r,this._checkResponse=this._checkResponse.bind(this)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo(),,])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d9c42335-bb0f-4233-9212-06bd7c09b9fe","Content-Type":"application/json"}});function O(){const e=document.querySelector(".modal_opened");e&&(e.classList.remove("modal_opened"),document.removeEventListener("keydown",z),document.removeEventListener("click",H))}function J(e){e.classList.add("modal_opened"),document.addEventListener("keydown",z),document.addEventListener("click",H)}function H(e){e.target.classList.contains("modal_opened")&&O()}function z(e){"Escape"===e.key&&O()}function M(e){const t=$.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__like-button"),o=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__delete-button");return o.textContent=e.name,n.alt=e.name,n.src=e.link,e.isLiked&&r.classList.add("card__like-button_liked"),r.addEventListener("click",(t=>function(e,t){const r=e.target,o=r.classList.contains("card__like-button_liked");N.changeLikeStatus(t,o).then((()=>{r.classList.toggle("card__like-button_liked")})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){j=e,w=t,console.log(t),J(T)}(t,e._id))),n.addEventListener("click",(()=>{J(D),I.src=e.link,I.alt=e.name,R.textContent=e.name})),t}var F;N.getAppInfo().then((e=>{let[t,r]=e;console.log(t),console.log(r),t.forEach((e=>{const t=M(e);console.log("Card element:",t),A.append(t)}));const o=document.querySelector(".profile__edit-button img"),n=document.querySelector(".profile__add-button img"),a=document.querySelector(".header__logo"),m=document.querySelector(".profile__pencil-icon"),_=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),v=document.querySelector("#mobile-pencil");S.src=i,o.src=c,n.src=s,a.src=l,m.src=d,v.src=u,S.src=r.avatar,_.textContent=r.name,h.textContent=r.about})).catch(console.error),y.addEventListener("click",(()=>{q.value=f.textContent,k.value=p.textContent,((e,t,o)=>{t.forEach((t=>{r(e,t,o)}));const a=e.querySelector(o.submitButtonSelector);n(a,o)})(g,[q,k],t),J(b)})),x.addEventListener("click",(()=>{J(L)})),v.addEventListener("click",(()=>{J(_)})),document.querySelectorAll(".modal__close-button").forEach((e=>{e.addEventListener("click",(()=>{e.closest(".modal"),O()}))})),P.addEventListener("click",(()=>{O()})),g.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;m(r,!0,"Save","Saving..."),N.editUserInfo({name:q.value,about:k.value}).then((o=>{f.textContent=o.name,p.textContent=o.about,S.src=o.avatar,e.target.reset(),n(r,t),O()})).catch(console.error).finally((()=>{m(r,!1,"Save","Saving...")}))})),C.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter,o={name:E.value,link:U.value};m(r,!0,"Save","Saving..."),N.addCard(o).then((o=>{const a=M(o);A.prepend(a),e.target.reset(),n(r,t),O()})).catch(console.error).finally((()=>{m(r,!1,"Save","Saving...")}))})),_.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;m(r,!0,"Save","Saving..."),N.editAvatarInfo(h.value).then((o=>{console.log(o.avatar),S.src=o.avatar,e.target.reset(),n(r,t),O()})).catch(console.error).finally((()=>{m(r,!1,"Save","Saving...")}))})),B.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;m(t,!0,"Delete","Deleting..."),console.log(w),N.deleteCard(w).then((t=>{console.log(t),j.remove(),e.target.reset(),O()})).catch(console.error).finally((()=>{m(t,!1,"Delete","Deleting...")}))})),F=t,document.querySelectorAll(F.formSelector).forEach((e=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);o(n,a,t),n.forEach((c=>{c.addEventListener("input",(()=>{((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{const n=t.id+"-error";e.querySelector("#"+n).textContent=r,t.classList.add(o.errorClass)})(e,t,t.validationMessage,o)})(e,c,t),o(n,a,t)}))}))})(e,F)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,